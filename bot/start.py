import copy
import logging
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from bot.funcs import notify_admins
from db.database import Database

from .keyboards import start_keyboard

router = Router(name="start")
db = Database()


@router.message(Command("start"))
async def start_command(message: types.Message, state: FSMContext):
    args = message.text.split()[1] if len(message.text.split()) > 1 else None

    user, is_new = db.get_or_create_user(message.from_user.id)
    await state.clear()
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} /start")

    keyboard = copy.deepcopy(start_keyboard)

    if args:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤
        ref_link = db.get_or_create_referral_link(args)
        clicks = db.increment_referral_clicks(ref_link.code)

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        await notify_admins(
            message.bot,
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @username –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ø–æ —Å—Å—ã–ª–∫–µ —Å –º–µ—Ç–∫–æ–π: {args}\n"
            f"–í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: {clicks}",
        )

    if is_new:
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        await notify_admins(
            message.bot,
            f"üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n"
            f"ID: <code>{message.from_user.id}</code>\n"
            f"–ò–º—è: {message.from_user.first_name}\n"
            f"Username: @{message.from_user.username}",
        )

    if user.is_admin:
        keyboard.inline_keyboard.append(
            [
                types.InlineKeyboardButton(
                    text="üëë –ê–¥–º–∏–Ω–∫–∞", callback_data="back_to_admin"
                )
            ]
        )

    await message.answer(
        text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n–í–∞—à –±–∞–ª–∞–Ω—Å: {user.balance} ‚ÇΩ\n–í–∞—à ID: <code>{message.from_user.id}</code>",
        reply_markup=keyboard,
        parse_mode="HTML",
    )
